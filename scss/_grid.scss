/* Veil Grid
// Options
// 
//! @extend clearfix - apply clearfix style
//! @include container($max-width: 100%) - default is 100%, can be adjusted
//! @include row($gutter: $grid-gutter-width) - default can be modified, most often do not need to
//! @include @extend common-style - basic gutter styling
//! @include screen($size, $container: false){add screen specific styles here} - sizes are small, medium, large. if container is set to true it includes container
//! @include col($col) - place within a given screen size and pass the column size you want for that size, passing 0 hides the object at that given size
//! @include push($push: 0) - push an object x amount of columns, default is 0 which will set left: auto
//! @include pull($pull: 0) - pull an object x amount of comumns, default is 0 which will set right: auto
//! @include offset($offset: 0) - offset an object x amount of columns, default is 0 which will set margin-left: 0
*/


.common-style{
	position: relative;
	// Prevent columns from collapsing when empty
	min-height: 1px;
	// Inner gutter via padding
	padding-left:  ($grid-gutter-width / 2);
	padding-right: ($grid-gutter-width / 2);
}

// Centered container element
@mixin container($max-width: 100%) {
	max-width: $max-width;
	margin-right: auto;
	margin-left: auto;
	padding-left:  ($grid-gutter-width / 2);
	padding-right: ($grid-gutter-width / 2);
	@extend clearfix;
}

// Creates a wrapper for a series of columns
@mixin row($gutter: $grid-gutter-width) {
  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);
  @extend clearfix;
}

@mixin screen($size, $container: false){
	
	@if $size == small{
		@media (min-width: $screen-tablet) {
		@if $container == true {@include container($container-tablet)};
		@content
		}
	} 
	@else if $size == medium {
		@media (min-width: $screen-desktop) {
		@if $container == true {@include container($container-desktop)};
		@content
		}
	} 
	@else if $size == large {
		@media (min-width: $screen-lg-desktop) {
		@if $container == true {@include container($container-lg-desktop)};
		@content
		}
	}
		
}	
	
@mixin col($col){
	  @if $col == 0 {display:none;} 
	  @else if $col >= 12 {@extend common-style; width: 100%; display: block;}
	  @else {@extend common-style; width: percentage(($col / $grid-columns)); display: block; float:left;}
}

@mixin push($push: 0){
	  @if $push == 0 {left: auto;}
	  @else if $push >= 12 {}
	  @else {left: percentage(($push/ $grid-columns));}
}

@mixin pull($pull: 0){
	  @if $pull == 0 {right: auto;}
	  @else if $pull >= 12 {}
	  @else {right: percentage(($pull/ $grid-columns));}
}

@mixin offset($offset: 0){
	  @if $offset == 0 {margin-left: 0;}
	  @else if $offset >= 12 {}
	  @else {margin-left: percentage(($offset/ $grid-columns));}
}